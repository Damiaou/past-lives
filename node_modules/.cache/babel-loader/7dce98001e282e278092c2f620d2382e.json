{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\damie\\\\Development\\\\past-lives\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\damie\\\\Development\\\\past-lives\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"./components/Header/Header\";\nimport { ButtonDiscover } from \"./components/ButtonDiscover/ButtonDiscover\";\nimport { PastLive } from \"./components/PastLive/PastLive\";\nimport { getRandomAdjective, getRandomAnimal } from \"./utils/fetchingApis\";\nimport \"./styles.css\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      discovered = _useState2[0],\n      setDiscovered = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animal = _useState4[0],\n      setAnimal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      adjective = _useState6[0],\n      setAdjective = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var toggleDiscovered = function toggleDiscovered() {\n    setDiscovered(!discovered);\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    getRandomAnimal().then(function (animal) {\n      setAnimal(animal);\n    });\n    getRandomAdjective(animal).then(function (adjective) {\n      setAdjective(adjective);\n    });\n    setLoading(false);\n  }, [discovered]); // Does not include animals and adjective by choice infinite loop if you do.\n\n  var handleClick = function handleClick() {\n    toggleDiscovered();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, discovered ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Remember\",\n    homeAction: handleClick,\n    discovered: discovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PastLive, {\n    animal: animal,\n    adjective: adjective,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Past Lives\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"discover-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonDiscover, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/damie/Development/past-lives/src/App.jsx"],"names":["React","useEffect","useState","Header","ButtonDiscover","PastLive","getRandomAdjective","getRandomAnimal","App","discovered","setDiscovered","animal","setAnimal","adjective","setAdjective","loading","setLoading","toggleDiscovered","then","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,sBAApD;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQN,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACrBO,UADqB;AAAA,MACTC,aADS;;AAAA,mBAEAR,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAErBS,MAFqB;AAAA,MAEbC,SAFa;;AAAA,mBAGMV,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,MAGrBW,SAHqB;AAAA,MAGVC,YAHU;;AAAA,mBAIEZ,QAAQ,CAAC,KAAD,CAJV;AAAA;AAAA,MAIrBa,OAJqB;AAAA,MAIZC,UAJY;;AAM5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BP,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,eAAe,GAAGW,IAAlB,CAAuB,UAACP,MAAD,EAAY;AACjCC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAFD;AAGAL,IAAAA,kBAAkB,CAACK,MAAD,CAAlB,CAA2BO,IAA3B,CAAgC,UAACL,SAAD,EAAe;AAC7CC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAFD;AAGAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GATQ,EASN,CAACP,UAAD,CATM,CAAT,CAV4B,CAoB5B;;AAEA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,gBAAgB;AACjB,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,UAAU,gBACT,uDACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,UAAU,EAAEU,WAFd;AAGE,IAAA,UAAU,EAAEV,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEE,MAAlB;AAA0B,IAAA,SAAS,EAAEE,SAArC;AAAgD,IAAA,OAAO,EAAEE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADS,gBAUT,uDACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEI,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAXJ,CADF;AAqBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Header } from \"./components/Header/Header\";\r\nimport { ButtonDiscover } from \"./components/ButtonDiscover/ButtonDiscover\";\r\nimport { PastLive } from \"./components/PastLive/PastLive\";\r\nimport { getRandomAdjective, getRandomAnimal } from \"./utils/fetchingApis\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [discovered, setDiscovered] = useState(false);\r\n  const [animal, setAnimal] = useState(\"\");\r\n  const [adjective, setAdjective] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toggleDiscovered = () => {\r\n    setDiscovered(!discovered);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRandomAnimal().then((animal) => {\r\n      setAnimal(animal);\r\n    });\r\n    getRandomAdjective(animal).then((adjective) => {\r\n      setAdjective(adjective);\r\n    });\r\n    setLoading(false);\r\n  }, [discovered]);\r\n  // Does not include animals and adjective by choice infinite loop if you do.\r\n\r\n  const handleClick = () => {\r\n    toggleDiscovered();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {discovered ? (\r\n        <>\r\n          <Header\r\n            title=\"Remember\"\r\n            homeAction={handleClick}\r\n            discovered={discovered}\r\n          />\r\n          <PastLive animal={animal} adjective={adjective} loading={loading} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Header title=\"Past Lives\" />\r\n          <div className=\"discover-button-container\">\r\n            <ButtonDiscover onClick={handleClick} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}