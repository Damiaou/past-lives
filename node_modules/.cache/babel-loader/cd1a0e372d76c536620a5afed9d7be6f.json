{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\damie\\\\Development\\\\past-lives\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\damie\\\\Development\\\\past-lives\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport function getRandomAnimal() {\n  return _getRandomAnimal.apply(this, arguments);\n}\n\nfunction _getRandomAnimal() {\n  _getRandomAnimal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var animal;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            animal = \"\";\n            _context.next = 3;\n            return fetch(\"https://gist.githubusercontent.com/borlaym/585e2e09dd6abd9b0d0a/raw/6e46db8f5c27cb18fd1dfa50c7c921a0fbacbad0/animals.json\").then(function (response) {\n              if (response.ok) {\n                return response.json();\n              }\n\n              return [];\n            }).then(function (data) {\n              var randomAnimal = data[Math.floor(Math.random() * data.length)];\n              animal = randomAnimal.toLowerCase();\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", animal);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRandomAnimal.apply(this, arguments);\n}\n\nexport function getRandomAdjective(_x) {\n  return _getRandomAdjective.apply(this, arguments);\n}\n\nfunction _getRandomAdjective() {\n  _getRandomAdjective = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(animal) {\n    var adjective;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            adjective = \"\";\n            _context2.next = 3;\n            return fetch(\"https://api.datamuse.com/words?rel_jjb=\".concat(animal)).then(function (response) {\n              if (response.ok) {\n                return response.json();\n              }\n\n              return [];\n            }).then(function (data) {\n              var randomAdjective = data[Math.floor(Math.random() * data.length - 1)];\n\n              if (randomAdjective !== undefined && Array.isArray(data) && data.length) {\n                adjective = randomAdjective.word;\n              }\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", adjective);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getRandomAdjective.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/damie/Development/past-lives/src/utils/fetchingApis.js"],"names":["getRandomAnimal","animal","fetch","then","response","ok","json","data","randomAnimal","Math","floor","random","length","toLowerCase","getRandomAdjective","adjective","randomAdjective","undefined","Array","isArray","word"],"mappings":";;AAAA,gBAAsBA,eAAtB;AAAA;AAAA;;;8EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,MADC,GACQ,EADR;AAAA;AAAA,mBAECC,KAAK,CACT,2HADS,CAAL,CAGHC,IAHG,CAGE,UAACC,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,uBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,qBAAO,EAAP;AACD,aARG,EASHH,IATG,CASE,UAACI,IAAD,EAAU;AACd,kBAAMC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAD,CAAzB;AAEAX,cAAAA,MAAM,GAAGO,YAAY,CAACK,WAAb,EAAT;AACD,aAbG,CAFD;;AAAA;AAAA,6CAgBEZ,MAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBP,gBAAsBa,kBAAtB;AAAA;AAAA;;;iFAAO,kBAAkCb,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACDc,YAAAA,SADC,GACW,EADX;AAAA;AAAA,mBAECb,KAAK,kDAA2CD,MAA3C,EAAL,CACHE,IADG,CACE,UAACC,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,uBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,qBAAO,EAAP;AACD,aANG,EAOHH,IAPG,CAOE,UAACI,IAAD,EAAU;AACd,kBAAMS,eAAe,GAAGT,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAArB,GAA8B,CAAzC,CAAD,CAA5B;;AAEA,kBAAII,eAAe,KAAKC,SAApB,IAAiCC,KAAK,CAACC,OAAN,CAAcZ,IAAd,CAAjC,IAAwDA,IAAI,CAACK,MAAjE,EAAyE;AACvEG,gBAAAA,SAAS,GAAGC,eAAe,CAACI,IAA5B;AACD;AACF,aAbG,CAFD;;AAAA;AAAA,8CAgBEL,SAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function getRandomAnimal() {\r\n  let animal = \"\";\r\n  await fetch(\r\n    \"https://gist.githubusercontent.com/borlaym/585e2e09dd6abd9b0d0a/raw/6e46db8f5c27cb18fd1dfa50c7c921a0fbacbad0/animals.json\"\r\n  )\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return [];\r\n    })\r\n    .then((data) => {\r\n      const randomAnimal = data[Math.floor(Math.random() * data.length)];\r\n\r\n      animal = randomAnimal.toLowerCase();\r\n    });\r\n  return animal;\r\n}\r\n\r\nexport async function getRandomAdjective(animal) {\r\n  let adjective = \"\";\r\n  await fetch(`https://api.datamuse.com/words?rel_jjb=${animal}`)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return [];\r\n    })\r\n    .then((data) => {\r\n      const randomAdjective = data[Math.floor(Math.random() * data.length - 1)];\r\n\r\n      if (randomAdjective !== undefined && Array.isArray(data) && data.length) {\r\n        adjective = randomAdjective.word;\r\n      }\r\n    });\r\n  return adjective;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}